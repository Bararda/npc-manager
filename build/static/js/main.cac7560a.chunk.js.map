{"version":3,"sources":["assets/images/blue_wings.png","components/npc-manager/npc-stat/npc-stat.js","components/npc-manager/npc/npc.js","components/generic/draggable/draggable.js","components/generic/ability-modifier/ability-modifier.js","components/npc-manager/npc-manager.js","core/nav-bar/nav-bar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NpcStat","React","forwardRef","props","ref","useState","stat","setStat","roll","getStat","useImperativeHandle","useEffect","defaultValue","className","onClick","name","type","onChange","ev","tempStat","parseInt","target","value","Npc","rolledNumber","setRolledNumber","defaultName","setName","cssClass","setCssClass","refs","Strength","useRef","Dexterity","Constitution","Intelligence","Wisdom","Charisma","toAdd","rolled","Math","floor","random","rollType","current","save","str","dex","con","int","wis","cha","placeholder","readOnly","Button","variant","Draggable","classes","setclasses","dragRef","startDrag","highlightElement","element","getElement","rect","getBoundingClientRect","offSetX","pageX","left","window","scrollX","offSetY","pageY","top","scrollY","moveElement","altKey","posY","posX","style","touchMoveElement","preventDefault","touch","changedTouches","stopDrag","document","removeEventListener","addEventListener","x","y","join","onMouseDown","onTouchStart","defaultX","defaultY","children","NpcManager","components","setComponents","npcs","setNpcs","setRollType","toDelete","setToDelete","getNewNpc","npcProps","dragProps","npcRef","length","createRef","npc","createElement","deleteButton","component","key","shortid","generate","newDraggables","filter","draggable","newNpcs","Form","Control","as","newRollType","states","entries","index","dragState","npcState","push","getStates","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","download","href","click","File","label","files","text","then","contents","json","parse","Array","isArray","comp","accept","NavItem","Nav","Link","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","src","require","alt","Toggle","aria-controls","Collapse","id","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gTAAAA,EAAOC,QAAU,IAA0B,wC,yHCqC5BC,G,MAlCCC,IAAMC,YAAW,SAAiBC,EAAOC,GAAM,IAAD,EAClCC,mBAAS,GADyB,mBACnDC,EADmD,KAC7CC,EAD6C,KAOpDC,EAAO,WACTL,EAAMK,KAAKF,IAGTG,EAAU,WACZ,OAAOH,GAGXI,8BAAoBN,GAAK,iBAAO,CAC5BI,KAAMA,EACNC,QAASA,MASb,OAFHE,qBAJqB,WACdJ,EAAQJ,EAAMS,gBAGA,IAGd,yBAAKC,UAAW,iBAAmBV,EAAMU,UAAWT,IAAKA,GACrD,2BAAOS,UAAU,qBAAqBC,QAAS,WAAON,MAAWL,EAAMY,MACvE,2BAAOF,UAAU,oBAAoBG,KAAMb,EAAMa,KAAMC,SA3B5C,SAACC,GAChB,IAAMC,EAAWC,SAASF,EAAGG,OAAOC,OACpCf,EAAQY,IAyByEP,aAAcT,EAAMS,oB,eCwD9FW,EAnFHtB,IAAMC,YAAW,SAAaC,EAAOC,GAAM,IAAD,EACVC,mBAAS,GADC,mBAC3CmB,EAD2C,KAC7BC,EAD6B,OAE1BpB,mBAASF,EAAMuB,aAAe,IAFJ,mBAE3CX,EAF2C,KAErCY,EAFqC,OAGlBtB,mBAAS,IAHS,mBAG3CuB,EAH2C,KAGjCC,EAHiC,KAK5CC,EAAO,CACTC,SAAUC,iBAAO,MACjBC,UAAWD,iBAAO,MAClBE,aAAcF,iBAAO,MACrBG,aAAcH,iBAAO,MACrBI,OAAQJ,iBAAO,MACfK,SAAUL,iBAAO,OAGfxB,EAAO,WAAgB,IAAf8B,EAAc,uDAAN,EACVC,EAASC,KAAKC,MAAuB,GAAhBD,KAAKE,UAAkB,EAE5Cb,EADU,KAAXU,EACa,eACM,IAAXA,EACK,YAEA,IAIhBd,EAFAc,GAAUD,IAKZK,EAAW,SAAC3B,GACXA,KAAQc,EACPA,EAAKd,GAAM4B,QAAQpC,OAEnBA,KAQXG,qBAJqB,WACdgB,EAAQxB,EAAMuB,eAGA,IAElB,IAIMmB,EAAO,WAUT,MATY,CACRC,IAAKhB,EAAKC,SAASa,QAAQnC,UAC3BsC,IAAKjB,EAAKG,UAAUW,QAAQnC,UAC5BuC,IAAKlB,EAAKI,aAAaU,QAAQnC,UAC/BwC,IAAKnB,EAAKK,aAAaS,QAAQnC,UAC/ByC,IAAKpB,EAAKM,OAAOQ,QAAQnC,UACzB0C,IAAKrB,EAAKO,SAASO,QAAQnC,UAC3BiB,YAAaX,IAYrB,OAPAL,8BAAoBN,GAAK,iBAAO,CAC5BuC,SAAUA,EACVE,KAAMA,MAMN,yBAAKhC,UAAU,OACX,yBAAKA,UAAU,eACX,2BAAOG,KAAK,OAAOH,UAAU,WAAWuC,YAAY,OAAOxC,aAAcT,EAAMuB,YAAaT,SA3BrF,SAACC,GAChBS,EAAQT,EAAGG,OAAOC,UA2BV,2BAAON,KAAK,SAASH,UAAW,YAAce,EAAUN,MAAOE,EAAc6B,UAAQ,IACrF,kBAACC,EAAA,EAAD,CAAQzC,UAAU,kBAAkB0C,QAAQ,gBAAgBzC,QAAS,WAAON,MAA5E,SAEJ,kBAAC,EAAD,CAASO,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKC,SAAUnB,aAAcT,EAAM2C,MAC1G,kBAAC,EAAD,CAAS/B,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKG,UAAWrB,aAAcT,EAAM4C,MAC3G,kBAAC,EAAD,CAAShC,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKI,aAActB,aAAcT,EAAM6C,MAC9G,kBAAC,EAAD,CAASjC,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKK,aAAcvB,aAAcT,EAAM8C,MAC9G,kBAAC,EAAD,CAASlC,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKM,OAAQxB,aAAcT,EAAM+C,MACxG,kBAAC,EAAD,CAASnC,KAAK,MAAMC,KAAK,SAASH,UAAU,UAAUL,KAAMA,EAAMJ,IAAK0B,EAAKO,SAAUzB,aAAcT,EAAMgD,UCSvGK,G,MCzFSvD,IAAMC,YAAW,SAAyBC,EAAOC,GAErE,OACI,yBAAKS,UAAU,mBAAmBT,IAAKA,GACnC,6BACI,2BAAOS,UAAU,gBAAgBG,KAAK,SACtC,2BAAOH,UAAU,uBAAuBG,KAAK,YAEjD,6BACI,2BAAOH,UAAU,0BAA0BG,KAAK,gB,MDR9Cf,IAAMC,YAAW,SAAmBC,EAAOC,GAAM,IAAD,EACnCC,mBAAS,CAAC,cADyB,mBAC1DoD,EAD0D,KACjDC,EADiD,KAE3DC,EAAU3B,mBASV4B,EAAY,SAAC1C,GAClB2C,IACA,IAAMC,EAAU1D,EAAIwC,QAAQmB,aACtBC,EAAOF,EAAQG,wBACTC,EAAUhD,EAAGiD,MAAQH,EAAKI,KAAOC,OAAOC,QACxCC,EAAUrD,EAAGsD,MAAQR,EAAKS,IAAMJ,OAAOK,QAO7CC,EAAc,SAACzD,GACpB,IAAIA,EAAG0D,OAAQ,CACd,IAAMC,EAAO3D,EAAGsD,MAAQD,EACTO,EAAO5D,EAAGiD,MAAQD,EACjCJ,EAAQiB,MAAMN,IAAMI,EAAO,KAC3Bf,EAAQiB,MAAMX,KAAOU,EAAO,OAKxBE,EAAmB,SAAC9D,GACzBA,EAAG+D,iBACH,IAAMC,EAAQhE,EAAGiE,eAAe,GAC1BN,EAAOK,EAAMV,MAAQD,EACZO,EAAOI,EAAMf,MAAQD,EACpCJ,EAAQiB,MAAMN,IAAMI,EAAO,KAC3Bf,EAAQiB,MAAMX,KAAOU,EAAO,MAMvBM,EAAW,SAAXA,EAAYlE,GAzClBwC,EAAW,CAAC,cA2CX2B,SAASC,oBAAoB,YAAaX,GAC1CU,SAASC,oBAAoB,UAAWF,GACxCC,SAASC,oBAAoB,WAAYF,GACzCC,SAASC,oBAAoB,cAAeF,GAC5CC,SAASC,oBAAoB,YAAaN,IAG3CK,SAASE,iBAAiB,YAAaZ,GACvCU,SAASE,iBAAiB,YAAaP,GACvCK,SAASE,iBAAiB,UAAWH,GACrCC,SAASE,iBAAiB,WAAYH,GACtCC,SAASE,iBAAiB,cAAeH,IAGpCvB,EAAmB,WACxBH,EAAW,GAAD,mBAAKD,GAAL,CAAc,qBAGnBZ,EAAO,WACZ,IACMmB,EADU5D,EAAIwC,QAAQmB,aACPE,wBAKrB,MAJkB,CACjBuB,EAAGxB,EAAKI,KACRqB,EAAGzB,EAAKS,MAYV,OAPA/D,8BAAoBN,GAAK,iBAAO,CAC/ByC,OACAkB,WAAY,WACX,OAAOJ,EAAQf,aAKhB,yBAAK/B,UAAW4C,EAAQiC,KAAK,KAAMC,YAAa/B,EAAWgC,aAAchC,EAAWxD,IAAKuD,EAASoB,MAAO,CAACX,KAAMjE,EAAM0F,UAAY,EAAGpB,IAAKtE,EAAM2F,UAAY,IAC1J3F,EAAM4F,c,mCEyDKC,MA1If,SAAoB7F,GAAQ,IAAD,EACUE,mBAAS,IADnB,mBACnB4F,EADmB,KACPC,EADO,OAEF7F,mBAAS,IAFP,mBAEnB8F,EAFmB,KAEbC,EAFa,OAGM/F,mBAAS,IAHf,mBAGnBsC,EAHmB,KAGT0D,EAHS,OAIMhG,mBAAS,IAJf,mBAInBiG,EAJmB,KAITC,EAJS,KAapBC,EAAY,WAAyE,IAAxEC,EAAuE,uDAA5D,GAAIC,EAAwD,uDAA5C,CAAClB,EAAE,IAAKC,EAAE,KACjDkB,GADmF,2CAAtBV,EAAWW,OAC/D3G,IAAM4G,aACfC,EAAM7G,IAAM8G,cAAcxF,EAApB,aAA0BnB,IAAKuG,GAAWF,IAChD9C,EAAU1D,IAAM4G,YAChBG,EAAe/G,IAAM8G,cAAczD,IAAQ,CAACC,QAAQ,iBAAkB1C,UAAW,gBAAiBC,QAAS,WAAOyF,EAAY,CAAC5C,UAASgD,aAAa,KACrJM,EAAYhH,IAAM8G,cACvBvD,EACA,CACCpD,IAAKuD,EACLuD,IAAKC,IAAQC,WACbvB,SAAUa,EAAUlB,EACpBM,SAAUY,EAAUjB,GAErBqB,EACAE,GAED,MAAO,CAACF,EAAKG,IA2Ed,OAzBAtG,qBAnCkB,WAEjB,IAAM0G,EAAgBpB,EAAWqB,QAAO,SAACC,GAAD,OAAeA,EAAUnH,MAAQkG,EAAS3C,WAC5E6D,EAAUrB,EAAKmB,QAAO,SAACR,GAAD,OAASA,EAAI1G,MAAQkG,EAASK,UAE1DT,EAAcmB,GACdjB,EAAQoB,KA6BY,CAAClB,IA0BrB,yBAAKzF,UAAU,eACd,kBAAC4G,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAAS1G,SAnEL,SAACC,GACvB,IAAM0G,EAAc1G,EAAGG,OAAOC,MAC9B+E,EAAYuB,IAiEyC/G,UAAU,uBAC7D,4BAAQS,MAAM,IAAd,QAGY,4BAAQA,MAAM,YAAd,YAGA,4BAAQA,MAAM,aAAd,aAGA,4BAAQA,MAAM,gBAAd,gBAGA,4BAAQA,MAAM,gBAAd,gBAGA,4BAAQA,MAAM,UAAd,UAGA,4BAAQA,MAAM,YAAd,aAIZ2E,EACD,kBAAC3C,EAAA,EAAD,CAAQxC,QAlGM,WAAO,IAAD,gBACJqF,GADI,IACrB,IAAI,EAAJ,qBAAuB,SACH/F,IACZwC,QAAQD,SAASA,IAHJ,gCAkGMY,QAAQ,gBAAgB1C,UAAU,YAA5D,YACA,kBAACyC,EAAA,EAAD,CAAQxC,QA7HK,WAAO,IAAD,EACK0F,IADL,mBACbM,EADa,KACRG,EADQ,KAEpBf,EAAc,GAAD,mBAAKD,GAAL,CAAiBgB,KAC9Bb,EAAQ,GAAD,mBAAKD,GAAL,CAAWW,MA0HQvD,QAAQ,gBAAgB1C,UAAU,WAA3D,WACA,kBAACyC,EAAA,EAAD,CAAQxC,QAhEG,WACZ,IAAM+G,EAhBW,WACjB,IADuB,EACjBA,EAAS,GADQ,cAES5B,EAAW6B,WAFpB,IAEvB,IAAI,EAAJ,qBAAsD,CAAC,IAAD,yBAA3CC,EAA2C,KAC/CC,EAD+C,KACzB5H,IAAIwC,QAAQC,OAElCoF,EADM9B,EAAK4B,GACI3H,IAAIwC,QAAQC,OACjCgF,EAAOK,KAAK,CACXF,YACAC,cARqB,8BAWvB,OAAOJ,EAKQM,GACTC,EAAWC,KAAKC,UAAUT,GAC1BU,EAAO,IAAIC,KAAK,CAACJ,GAAW,CAACpH,KAAM,eACnCyH,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EAAOvD,SAAS0B,cAAc,KACpC6B,EAAKC,SAAW,YAChBD,EAAKE,KAAOL,EACZG,EAAKG,SAwDmBxF,QAAQ,kBAAkB1C,UAAU,aAA3D,QACA,kBAAC4G,EAAA,EAAKuB,KAAN,CAAWC,MAAM,OAAOhI,SAnDb,SAACC,GACb,IADoB,EACdgI,EAAQhI,EAAGG,OAAO6H,MADJ,cAEFA,GAFE,IAEpB,IAAI,EAAJ,qBAAyB,SACnBC,OAAOC,MAAK,SAACC,GACjB,IAAMC,EAAOjB,KAAKkB,MAAMF,GAClB7B,EAAU,GACVH,EAAgB,GAClBH,EAAMjB,EAAWW,OACrB,GAAG4C,MAAMC,QAAQH,GAAO,CAAC,IAAD,gBACLA,GADK,IACvB,IAAI,EAAJ,qBAAwB,CAAC,IAAfI,EAAc,UACElD,EAAUkD,EAAKzB,SAAUyB,EAAK1B,UAAWd,GAD3C,mBAChBJ,EADgB,KACXS,EADW,KAEvBC,EAAQU,KAAKpB,GACbO,EAAca,KAAKX,GACnBL,KALsB,+BAQxBhB,EAAc,GAAD,mBAAKD,GAAeoB,IACjCjB,EAAQ,GAAD,mBAAKD,GAASqB,QAjBH,gCAmDqBmC,OAAO,QAAQ9I,UAAU,gB,8BChHpE,SAAS+I,EAAQzJ,GAChB,OAAO,kBAAC0J,EAAA,EAAIC,KAAL,CAAUhB,KAAM,IAAK3I,EAAM4F,UAqBpBgE,MA5Cf,WACC,OACC,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAO5G,QAAQ,QACtD,kBAACyG,EAAA,EAAOI,MAAR,CAActB,KAAK,SAClB,yBACCuB,IAAKC,EAAQ,IACbzJ,UAAU,WACV0J,IAAI,SAGN,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,yBACnB,kBAACd,EAAA,EAAD,CAAKhJ,UAAU,WACd,kBAAC+I,EAAD,CAASd,KAAK,cAAd,mBCHU8B,MAXf,WACE,OACE,yBAAK/J,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,SCEYgK,QACW,cAA7BxG,OAAOyG,SAASC,UAEe,UAA7B1G,OAAOyG,SAASC,UAEhB1G,OAAOyG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9F,SAAS+F,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cac7560a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue_wings.7c5967e3.png\";","import React, {useState, useImperativeHandle, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './npc-stat.css';\nconst NpcStat = React.forwardRef(function NpcStat(props, ref) {\n    const [stat, setStat] = useState(0);\n    const updateStat = (ev) => {\n        const tempStat = parseInt(ev.target.value);\n        setStat(tempStat);\n    };\n\n    const roll = () => {\n        props.roll(stat);\n    };\n\n    const getStat = () => {\n        return stat;\n    };\n\n    useImperativeHandle(ref, () => ({\n        roll: roll,\n        getStat: getStat\n    }));\n\n    const loadProps = () => {\n        setStat(props.defaultValue);\n    };\n\n\tuseEffect(loadProps, []);\n\n    return (\n        <div className={'labeled-input ' + props.className} ref={ref}>\n            <label className='labeled-input-name' onClick={() => {roll();}}>{props.name}</label>\n            <input className='labeled-input-box' type={props.type} onChange={updateStat} defaultValue={props.defaultValue}/>\n        </div>\n    );\n});\n\nexport default NpcStat;\n\n\nNpcStat.propTypes = {\n    defaultValue: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    roll: PropTypes.func.isRequired\n};","import React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport NpcStat from '../npc-stat/npc-stat';\nimport PropTypes from 'prop-types';\nimport './npc.css';\nimport Button from 'react-bootstrap/Button';\nconst Npc = React.forwardRef(function Npc(props, ref) {\n    const [rolledNumber, setRolledNumber] = useState(0);\n    const [name, setName] = useState(props.defaultName || '');\n    const [cssClass, setCssClass] = useState('');\n\n    const refs = {\n        Strength: useRef(null),\n        Dexterity: useRef(null),\n        Constitution: useRef(null),\n        Intelligence: useRef(null),\n        Wisdom: useRef(null),\n        Charisma: useRef(null),\n    };\n\n    const roll = (toAdd = 0) => {\n            let rolled = Math.floor((Math.random() * 20)) + 1;\n            if(rolled === 20) {\n                setCssClass('crit-success');\n            } else if (rolled === 1) {\n                setCssClass('crit-fail');\n            } else {\n                setCssClass('');\n            }\n            rolled += toAdd;\n\n            setRolledNumber(rolled);\n    };\n\n    const rollType = (type) => {\n        if(type in refs) {\n            refs[type].current.roll();\n        } else {\n            roll();\n        }\n    };\n\n    const loadProps = () => {\n        setName(props.defaultName);\n    };\n\n\tuseEffect(loadProps, []);\n\n    const updateName = (ev) => {\n        setName(ev.target.value);\n    };\n\n    const save = () => {\n        const npc = {\n            str: refs.Strength.current.getStat(),\n            dex: refs.Dexterity.current.getStat(),\n            con: refs.Constitution.current.getStat(),\n            int: refs.Intelligence.current.getStat(),\n            wis: refs.Wisdom.current.getStat(),\n            cha: refs.Charisma.current.getStat(),\n            defaultName: name\n        };\n        return npc;\n    };\n\n    useImperativeHandle(ref, () => ({\n        rollType: rollType,\n        save: save\n    }));\n\n\n\n    return (\n        <div className='npc'>\n            <div className='npc-wrapper'>\n                <input type='text' className='npc-name' placeholder='Name' defaultValue={props.defaultName} onChange={updateName}/>\n                <input type='number' className={'npc-roll ' + cssClass} value={rolledNumber} readOnly/>\n                <Button className=\"npc-roll-button\" variant=\"outline-light\" onClick={() => {roll();}}>Roll</Button>\n            </div>\n            <NpcStat name='str' type='number' className=\"npc-str\" roll={roll} ref={refs.Strength} defaultValue={props.str}/>\n            <NpcStat name='dex' type='number' className=\"npc-dex\" roll={roll} ref={refs.Dexterity} defaultValue={props.dex}/>\n            <NpcStat name='con' type='number' className=\"npc-con\" roll={roll} ref={refs.Constitution} defaultValue={props.con}/>\n            <NpcStat name='int' type='number' className=\"npc-int\" roll={roll} ref={refs.Intelligence} defaultValue={props.int}/>\n            <NpcStat name='wis' type='number' className=\"npc-wis\" roll={roll} ref={refs.Wisdom} defaultValue={props.wis}/>\n            <NpcStat name='cha' type='number' className=\"npc-cha\" roll={roll} ref={refs.Charisma} defaultValue={props.cha}/>\n        </div>\n    );\n});\n\nexport default Npc;\n\n\nNpc.propTypes = {\n    defaultName: PropTypes.string,\n    str: PropTypes.number,\n    dex: PropTypes.number,\n    con: PropTypes.number,\n    int: PropTypes.number,\n    wis: PropTypes.number,\n    cha: PropTypes.number,\n};","import React, { useState, useImperativeHandle, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './draggable.css';\n\nconst Draggable = React.forwardRef(function Draggable(props, ref) {\n\tconst [classes, setclasses] = useState(['draggable']);\n\tconst dragRef = useRef();\n\tconst disableHighlight = () => {\n\t\tsetclasses(['draggable']);\n\t};\n\n\t/**\n\t * Starts dragging the component. Remembering where the user initially clicked on it\n\t * @param {Event} ev\n\t */\n\tconst startDrag = (ev) => {\n\t\thighlightElement();\n\t\tconst element = ref.current.getElement();\n\t\tconst rect = element.getBoundingClientRect();\n        const offSetX = ev.pageX - rect.left - window.scrollX;\n        const offSetY = ev.pageY - rect.top - window.scrollY;\n\n\t\t/**\n\t\t * Moves an element to the mouse position\n\t\t * defined inside startdrag so that it has a reference to the element\n\t\t * @param {Event} ev\n\t\t */\n\t\tconst moveElement = (ev) => {\n\t\t\tif(!ev.altKey) {\n\t\t\t\tconst posY = ev.pageY - offSetY;\n            \tconst posX = ev.pageX - offSetX;\n\t\t\t\telement.style.top = posY + 'px';\n\t\t\t\telement.style.left = posX + 'px';\n\t\t\t}\n\t\t};\n\n\t\t//doesnt work yet\n\t\tconst touchMoveElement = (ev) => {\n\t\t\tev.preventDefault();\n\t\t\tconst touch = ev.changedTouches[0];\n\t\t\tconst posY = touch.pageY - offSetY;\n            const posX = touch.pageX - offSetX;\n\t\t\telement.style.top = posY + 'px';\n\t\t\telement.style.left = posX + 'px';\n\t\t};\n\n\t\t/**\n\t\t * Stops the element from dragging and removes the document event listeners\n\t\t */\n\t\tconst stopDrag = (ev) => {\n\t\t\tdisableHighlight();\n\t\t\tdocument.removeEventListener('mousemove', moveElement);\n\t\t\tdocument.removeEventListener('mouseup', stopDrag);\n\t\t\tdocument.removeEventListener('touchend', stopDrag);\n\t\t\tdocument.removeEventListener('touchcancel', stopDrag);\n\t\t\tdocument.removeEventListener('touchmove', touchMoveElement);\n\t\t};\n\n\t\tdocument.addEventListener('mousemove', moveElement);\n\t\tdocument.addEventListener('touchmove', touchMoveElement);\n\t\tdocument.addEventListener('mouseup', stopDrag);\n\t\tdocument.addEventListener('touchend', stopDrag);\n\t\tdocument.addEventListener('touchcancel', stopDrag);\n\t};\n\n\tconst highlightElement = () => {\n\t\tsetclasses([...classes, 'border-enabled']);\n\t};\n\n\tconst save = () => {\n\t\tconst element = ref.current.getElement();\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst draggable = {\n\t\t\tx: rect.left,\n\t\t\ty: rect.top,\n\t\t};\n\t\treturn draggable;\n\t};\n\n\tuseImperativeHandle(ref, () => ({\n\t\tsave,\n\t\tgetElement: () => {\n\t\t\treturn dragRef.current;\n\t\t}\n\t}));\n\n\treturn (\n\t\t<div className={classes.join(' ')} onMouseDown={startDrag} onTouchStart={startDrag} ref={dragRef} style={{left: props.defaultX || 0, top: props.defaultY || 0}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n});\nexport default Draggable;\n\nDraggable.propTypes = {\n\tchildren: PropTypes.node,\n\tdefaultX: PropTypes.number,\n\tdefaultY: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ability-modifier.css';\nconst AbilityModifier = React.forwardRef(function AbilityModifier(props, ref) {\n\n    return (\n        <div className=\"ability-modifier\" ref={ref}>\n            <div>\n                <input className=\"modifier-name\" type=\"text\"/>\n                <input className=\"ability-modifier-top\" type=\"number\"></input>\n            </div>\n            <div>\n                <input className=\"ability-modifier-bottom\" type=\"number\"></input>\n            </div>\n        </div>\n    );\n});\n\nAbilityModifier.propTypes = {\n    name: PropTypes.string,\n    style: PropTypes.object,\n    styleString: PropTypes.string\n};\n\nexport default AbilityModifier;","import React, { useState, useEffect } from 'react';\nimport Npc from './npc/npc';\nimport { Draggable } from '../generic/';\nimport Button from 'react-bootstrap/Button';\nimport './npc-manager.css';\nimport Form from 'react-bootstrap/Form';\nimport shortid from 'shortid';\nfunction NpcManager(props) {\n\tconst [components, setComponents] = useState([]);\n\tconst [npcs, setNpcs] = useState([]);\n\tconst [rollType, setRollType] = useState('');\n\tconst [toDelete, setToDelete] = useState({});\n\n\tconst addNpc = () => {\n\t\tconst [npc, component] = getNewNpc();\n\t\tsetComponents([...components, component]);\n\t\tsetNpcs([...npcs, npc]);\n\t};\n\n\n\tconst getNewNpc = (npcProps = {}, dragProps = {x:500, y:100}, key = components.length) => {\n\t\tconst npcRef = React.createRef();\n\t\tconst npc = React.createElement(Npc, {ref: npcRef, ...npcProps});\n\t\tconst dragRef = React.createRef();\n\t\tconst deleteButton = React.createElement(Button, {variant:'outline-danger', className: 'delete-button', onClick: () => {setToDelete({dragRef, npcRef});}}, 'X');\n\t\tconst component = React.createElement(\n\t\t\tDraggable,\n\t\t\t{\n\t\t\t\tref: dragRef,\n\t\t\t\tkey: shortid.generate(),\n\t\t\t\tdefaultX: dragProps.x,\n\t\t\t\tdefaultY: dragProps.y,\n\t\t\t},\n\t\t\tnpc,\n\t\t\tdeleteButton,\n\t\t);\n\t\treturn [npc, component];\n\t};\n\n\tconst rollAll = () => {\n\t\tfor(const npc of npcs) {\n\t\t\tconst npcRef = npc.ref;\n\t\t\tnpcRef.current.rollType(rollType);\n\t\t}\n\t};\n\n\tconst updateRollType = (ev) => {\n\t\tconst newRollType = ev.target.value;\n\t\tsetRollType(newRollType);\n\t};\n\n\tconst deleteNpc = () => {\n\n\t\tconst newDraggables = components.filter((draggable) => draggable.ref !== toDelete.dragRef);\n\t\tconst newNpcs = npcs.filter((npc) => npc.ref !== toDelete.npcRef);\n\n\t\tsetComponents(newDraggables);\n\t\tsetNpcs(newNpcs);\n\t};\n\n\tconst getStates = () => {\n\t\tconst states = [];\n\t\tfor(const [index, draggable] of components.entries()) {\n\t\t\tconst dragState = draggable.ref.current.save();\n\t\t\tconst npc = npcs[index];\n\t\t\tconst npcState = npc.ref.current.save();\n\t\t\tstates.push({\n\t\t\t\tdragState,\n\t\t\t\tnpcState\n\t\t\t});\n\t\t}\n\t\treturn states;\n\t};\n\n\t//hacked on save functionality, Not really a fan of how I'm doing this but I dont wanna spend forever on it\n\tconst save = () => {\n\t\tconst states = getStates();\n\t\tconst fileData = JSON.stringify(states);\n\t\tconst blob = new Blob([fileData], {type: 'text/plain'});\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.download = 'npcs.json';\n\t\tlink.href = url;\n\t\tlink.click();\n\t};\n\n\tuseEffect(deleteNpc, [toDelete]);\n\n\n\tconst load = (ev) => {\n\t\tconst files = ev.target.files;\n\t\tfor(const file of files) {\n\t\t\tfile.text().then((contents) => {\n\t\t\t\tconst json = JSON.parse(contents);\n\t\t\t\tconst newNpcs = [];\n\t\t\t\tconst newDraggables = [];\n\t\t\t\tlet key = components.length;\n\t\t\t\tif(Array.isArray(json)) {\n\t\t\t\t\tfor(const comp of json) {\n\t\t\t\t\t\tconst [npc, draggable] = getNewNpc(comp.npcState, comp.dragState, key);\n\t\t\t\t\t\tnewNpcs.push(npc);\n\t\t\t\t\t\tnewDraggables.push(draggable);\n\t\t\t\t\t\tkey++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetComponents([...components, ...newDraggables]);\n\t\t\t\tsetNpcs([...npcs, ...newNpcs]);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"npc-manager\">\n\t\t\t<Form.Control as=\"select\" onChange={updateRollType} className='npc-rolltype-select'>\n\t\t\t\t<option value=\"\">\n\t\t\t\t\tNone\n\t\t\t\t</option>\n                <option value=\"Strength\">\n\t\t\t\t\tStrength\n\t\t\t\t</option>\n                <option value=\"Dexterity\">\n\t\t\t\t\tDexterity\n\t\t\t\t</option>\n                <option value=\"Constitution\">\n\t\t\t\t\tConstitution\n\t\t\t\t</option>\n                <option value=\"Intelligence\">\n\t\t\t\t\tIntelligence\n\t\t\t\t</option>\n                <option value=\"Wisdom\">\n\t\t\t\t\tWisdom\n\t\t\t\t</option>\n                <option value=\"Charisma\">\n\t\t\t\t\tCharisma\n\t\t\t\t</option>\n\t\t\t</Form.Control>\n\t\t\t{components}\n\t\t\t<Button onClick={rollAll} variant=\"outline-light\" className='roll-all'>Roll All</Button>\n\t\t\t<Button onClick={addNpc} variant=\"outline-light\" className='new-npc'>New NPC</Button>\n\t\t\t<Button onClick={save} variant=\"outline-success\" className='save-npcs'>Save</Button>\n\t\t\t<Form.File label=\"Load\" onChange={load} accept=\".json\" className='load-npcs'/>\n\t\t</div>\n\t);\n}\n\nexport default NpcManager;\n\n\n","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport './nav-bar.css';\nimport PropTypes from 'prop-types';\n\nfunction NavBar() {\n\treturn (\n\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"blue\" variant=\"dark\">\n\t\t\t<Navbar.Brand href=\"#home\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={require('../../assets/images/blue_wings.png')}\n\t\t\t\t\tclassName=\"nav-logo\"\n\t\t\t\t\talt=\"dnd\"\n\t\t\t\t/>\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<NavItem href=\"npcManager\">\n\t\t\t\t\t\tNPC Manager\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n}\n\nfunction NavItem(props) {\n\treturn <Nav.Link href={''}>{props.children}</Nav.Link>;\n}\nNavItem.propTypes = {\n\thref: PropTypes.string.isRequired,\n\tchildren: PropTypes.string.isRequired,\n};\n\nfunction NavLogo(props) {\n\treturn (\n\t\t<Navbar.Brand className=\"logo\" href={props.href}>\n\t\t\t{props.children}\n\t\t</Navbar.Brand>\n\t);\n}\n\n\nNavLogo.propTypes = {\n\thref: PropTypes.string,\n\tchildren: PropTypes.object,\n};\n\nexport default NavBar;\n","import React from 'react';\nimport './App.css';\nimport NpcManager from './components/npc-manager/npc-manager';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './core/nav-bar/nav-bar';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <div className='main-content'>\n        <NpcManager></NpcManager>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}