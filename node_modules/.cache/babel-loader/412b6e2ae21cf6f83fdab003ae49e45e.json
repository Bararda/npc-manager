{"ast":null,"code":"var _jsxFileName = \"/home/anthony/repos/npc-manager/src/components/npc-manager/npc/npc.js\";\nimport React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport NpcStat from '../npc-stat/npc-stat';\nimport PropTypes from 'prop-types';\nimport './npc.css';\nimport Button from 'react-bootstrap/Button';\nconst Npc = React.forwardRef(function Npc(props, ref) {\n  const [rolledNumber, setRolledNumber] = useState(0);\n  const [name, setName] = useState(props.defaultName || '');\n  const [cssClass, setCssClass] = useState('');\n  const refs = {\n    Strength: useRef(null),\n    Dexterity: useRef(null),\n    Constitution: useRef(null),\n    Intelligence: useRef(null),\n    Wisdom: useRef(null),\n    Charisma: useRef(null)\n  };\n\n  const roll = (toAdd = 0) => {\n    let rolled = Math.floor(Math.random() * 20) + 1;\n\n    if (rolled === 20) {\n      setCssClass('crit-success');\n    } else if (rolled === 1) {\n      setCssClass('crit-fail');\n    } else {\n      setCssClass('');\n    }\n\n    rolled += toAdd;\n    setRolledNumber(rolled);\n  };\n\n  const rollType = type => {\n    if (type in refs) {\n      refs[type].current.roll();\n    } else {\n      roll();\n    }\n  };\n\n  const loadProps = () => {\n    setName(props.defaultName);\n  };\n\n  useEffect(loadProps, []);\n\n  const updateName = ev => {\n    setName(ev.target.value);\n  };\n\n  const save = () => {\n    const npc = {\n      str: refs.Strength.current.getStat(),\n      dex: refs.Dexterity.current.getStat(),\n      con: refs.Constitution.current.getStat(),\n      int: refs.Intelligence.current.getStat(),\n      wis: refs.Wisdom.current.getStat(),\n      cha: refs.Charisma.current.getStat(),\n      defaultName: name\n    };\n    return npc;\n  };\n\n  useImperativeHandle(ref, () => ({\n    rollType: rollType,\n    save: save\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"npc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"npc-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"npc-name\",\n    placeholder: \"Name\",\n    defaultValue: props.defaultName,\n    onChange: updateName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: 'npc-roll ' + cssClass,\n    value: rolledNumber,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"npc-roll-button\",\n    variant: \"outline-light\",\n    onClick: () => {\n      roll();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Roll\")), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"str\",\n    type: \"number\",\n    className: \"npc-str\",\n    roll: roll,\n    ref: refs.Strength,\n    defaultValue: props.str,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"dex\",\n    type: \"number\",\n    className: \"npc-dex\",\n    roll: roll,\n    ref: refs.Dexterity,\n    defaultValue: props.dex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"con\",\n    type: \"number\",\n    className: \"npc-con\",\n    roll: roll,\n    ref: refs.Constitution,\n    defaultValue: props.con,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"int\",\n    type: \"number\",\n    className: \"npc-int\",\n    roll: roll,\n    ref: refs.Intelligence,\n    defaultValue: props.int,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"wis\",\n    type: \"number\",\n    className: \"npc-wis\",\n    roll: roll,\n    ref: refs.Wisdom,\n    defaultValue: props.wis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NpcStat, {\n    name: \"cha\",\n    type: \"number\",\n    className: \"npc-cha\",\n    roll: roll,\n    ref: refs.Charisma,\n    defaultValue: props.cha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n});\nexport default Npc;\nNpc.propTypes = {\n  defaultName: PropTypes.string,\n  str: PropTypes.number,\n  dex: PropTypes.number,\n  con: PropTypes.number,\n  int: PropTypes.number,\n  wis: PropTypes.number,\n  cha: PropTypes.number\n};","map":{"version":3,"sources":["/home/anthony/repos/npc-manager/src/components/npc-manager/npc/npc.js"],"names":["React","useState","useRef","useImperativeHandle","useEffect","NpcStat","PropTypes","Button","Npc","forwardRef","props","ref","rolledNumber","setRolledNumber","name","setName","defaultName","cssClass","setCssClass","refs","Strength","Dexterity","Constitution","Intelligence","Wisdom","Charisma","roll","toAdd","rolled","Math","floor","random","rollType","type","current","loadProps","updateName","ev","target","value","save","npc","str","getStat","dex","con","int","wis","cha","propTypes","string","number"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport NpcStat from '../npc-stat/npc-stat';\nimport PropTypes from 'prop-types';\nimport './npc.css';\nimport Button from 'react-bootstrap/Button';\nconst Npc = React.forwardRef(function Npc(props, ref) {\n    const [rolledNumber, setRolledNumber] = useState(0);\n    const [name, setName] = useState(props.defaultName || '');\n    const [cssClass, setCssClass] = useState('');\n\n    const refs = {\n        Strength: useRef(null),\n        Dexterity: useRef(null),\n        Constitution: useRef(null),\n        Intelligence: useRef(null),\n        Wisdom: useRef(null),\n        Charisma: useRef(null),\n    };\n\n    const roll = (toAdd = 0) => {\n            let rolled = Math.floor((Math.random() * 20)) + 1;\n            if(rolled === 20) {\n                setCssClass('crit-success');\n            } else if (rolled === 1) {\n                setCssClass('crit-fail');\n            } else {\n                setCssClass('');\n            }\n            rolled += toAdd;\n\n            setRolledNumber(rolled);\n    };\n\n    const rollType = (type) => {\n        if(type in refs) {\n            refs[type].current.roll();\n        } else {\n            roll();\n        }\n    };\n\n    const loadProps = () => {\n        setName(props.defaultName);\n    };\n\n\tuseEffect(loadProps, []);\n\n    const updateName = (ev) => {\n        setName(ev.target.value);\n    };\n\n    const save = () => {\n        const npc = {\n            str: refs.Strength.current.getStat(),\n            dex: refs.Dexterity.current.getStat(),\n            con: refs.Constitution.current.getStat(),\n            int: refs.Intelligence.current.getStat(),\n            wis: refs.Wisdom.current.getStat(),\n            cha: refs.Charisma.current.getStat(),\n            defaultName: name\n        };\n        return npc;\n    };\n\n    useImperativeHandle(ref, () => ({\n        rollType: rollType,\n        save: save\n    }));\n\n\n\n    return (\n        <div className='npc'>\n            <div className='npc-wrapper'>\n                <input type='text' className='npc-name' placeholder='Name' defaultValue={props.defaultName} onChange={updateName}/>\n                <input type='number' className={'npc-roll ' + cssClass} value={rolledNumber} readOnly/>\n                <Button className=\"npc-roll-button\" variant=\"outline-light\" onClick={() => {roll();}}>Roll</Button>\n            </div>\n            <NpcStat name='str' type='number' className=\"npc-str\" roll={roll} ref={refs.Strength} defaultValue={props.str}/>\n            <NpcStat name='dex' type='number' className=\"npc-dex\" roll={roll} ref={refs.Dexterity} defaultValue={props.dex}/>\n            <NpcStat name='con' type='number' className=\"npc-con\" roll={roll} ref={refs.Constitution} defaultValue={props.con}/>\n            <NpcStat name='int' type='number' className=\"npc-int\" roll={roll} ref={refs.Intelligence} defaultValue={props.int}/>\n            <NpcStat name='wis' type='number' className=\"npc-wis\" roll={roll} ref={refs.Wisdom} defaultValue={props.wis}/>\n            <NpcStat name='cha' type='number' className=\"npc-cha\" roll={roll} ref={refs.Charisma} defaultValue={props.cha}/>\n        </div>\n    );\n});\n\nexport default Npc;\n\n\nNpc.propTypes = {\n    defaultName: PropTypes.string,\n    str: PropTypes.number,\n    dex: PropTypes.number,\n    con: PropTypes.number,\n    int: PropTypes.number,\n    wis: PropTypes.number,\n    cha: PropTypes.number,\n};"]},"metadata":{},"sourceType":"module"}