{"ast":null,"code":"var _jsxFileName = \"/home/anthony/repos/npc-manager/src/components/npc-manager/npc-stat/npc-stat.js\";\nimport React, { useState, useImperativeHandle, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './npc-stat.css';\nconst NpcStat = React.forwardRef(function NpcStat(props, ref) {\n  const [stat, setStat] = useState(0);\n\n  const updateStat = ev => {\n    const tempStat = parseInt(ev.target.value);\n    setStat(tempStat);\n  };\n\n  const roll = () => {\n    props.roll(stat);\n  };\n\n  const getStat = () => {\n    return stat;\n  };\n\n  useImperativeHandle(ref, () => ({\n    roll: roll,\n    getStat: getStat\n  }));\n\n  const loadProps = () => {\n    setStat(props.defaultValue);\n  };\n\n  useEffect(loadProps, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'labeled-input ' + props.className,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"labeled-input-name\",\n    onClick: () => {\n      roll();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"labeled-input-box\",\n    type: props.type,\n    onChange: updateStat,\n    defaultValue: props.defaultValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n});\nexport default NpcStat;\nNpcStat.propTypes = {\n  defaultValue: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  roll: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/anthony/repos/npc-manager/src/components/npc-manager/npc-stat/npc-stat.js"],"names":["React","useState","useImperativeHandle","useEffect","PropTypes","NpcStat","forwardRef","props","ref","stat","setStat","updateStat","ev","tempStat","parseInt","target","value","roll","getStat","loadProps","defaultValue","className","name","type","propTypes","number","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,mBAAzB,EAA8CC,SAA9C,QAA8D,OAA9D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;AACA,MAAMC,OAAO,GAAGL,KAAK,CAACM,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;;AACA,QAAMU,UAAU,GAAIC,EAAD,IAAQ;AACvB,UAAMC,QAAQ,GAAGC,QAAQ,CAACF,EAAE,CAACG,MAAH,CAAUC,KAAX,CAAzB;AACAN,IAAAA,OAAO,CAACG,QAAD,CAAP;AACH,GAHD;;AAKA,QAAMI,IAAI,GAAG,MAAM;AACfV,IAAAA,KAAK,CAACU,IAAN,CAAWR,IAAX;AACH,GAFD;;AAIA,QAAMS,OAAO,GAAG,MAAM;AAClB,WAAOT,IAAP;AACH,GAFD;;AAIAP,EAAAA,mBAAmB,CAACM,GAAD,EAAM,OAAO;AAC5BS,IAAAA,IAAI,EAAEA,IADsB;AAE5BC,IAAAA,OAAO,EAAEA;AAFmB,GAAP,CAAN,CAAnB;;AAKA,QAAMC,SAAS,GAAG,MAAM;AACpBT,IAAAA,OAAO,CAACH,KAAK,CAACa,YAAP,CAAP;AACH,GAFD;;AAIHjB,EAAAA,SAAS,CAACgB,SAAD,EAAY,EAAZ,CAAT;AAEG,sBACI;AAAK,IAAA,SAAS,EAAE,mBAAmBZ,KAAK,CAACc,SAAzC;AAAoD,IAAA,GAAG,EAAEb,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,OAAO,EAAE,MAAM;AAACS,MAAAA,IAAI;AAAI,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiEV,KAAK,CAACe,IAAvE,CADJ,eAEI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAqC,IAAA,IAAI,EAAEf,KAAK,CAACgB,IAAjD;AAAuD,IAAA,QAAQ,EAAEZ,UAAjE;AAA6E,IAAA,YAAY,EAAEJ,KAAK,CAACa,YAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAhCe,CAAhB;AAkCA,eAAef,OAAf;AAGAA,OAAO,CAACmB,SAAR,GAAoB;AAChBJ,EAAAA,YAAY,EAAEhB,SAAS,CAACqB,MADR;AAEhBH,EAAAA,IAAI,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UAFP;AAGhBJ,EAAAA,IAAI,EAAEnB,SAAS,CAACsB,MAAV,CAAiBC,UAHP;AAIhBN,EAAAA,SAAS,EAAEjB,SAAS,CAACsB,MAJL;AAKhBT,EAAAA,IAAI,EAAEb,SAAS,CAACwB,IAAV,CAAeD;AALL,CAApB","sourcesContent":["import React, {useState, useImperativeHandle, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './npc-stat.css';\nconst NpcStat = React.forwardRef(function NpcStat(props, ref) {\n    const [stat, setStat] = useState(0);\n    const updateStat = (ev) => {\n        const tempStat = parseInt(ev.target.value);\n        setStat(tempStat);\n    };\n\n    const roll = () => {\n        props.roll(stat);\n    };\n\n    const getStat = () => {\n        return stat;\n    };\n\n    useImperativeHandle(ref, () => ({\n        roll: roll,\n        getStat: getStat\n    }));\n\n    const loadProps = () => {\n        setStat(props.defaultValue);\n    };\n\n\tuseEffect(loadProps, []);\n\n    return (\n        <div className={'labeled-input ' + props.className} ref={ref}>\n            <label className='labeled-input-name' onClick={() => {roll();}}>{props.name}</label>\n            <input className='labeled-input-box' type={props.type} onChange={updateStat} defaultValue={props.defaultValue}/>\n        </div>\n    );\n});\n\nexport default NpcStat;\n\n\nNpcStat.propTypes = {\n    defaultValue: PropTypes.number,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    roll: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}