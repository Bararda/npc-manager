{"ast":null,"code":"var _jsxFileName = \"/home/anthony/repos/npc-manager/src/components/npc-manager/npc-manager.js\";\nimport React, { useState, useEffect } from 'react';\nimport Npc from './npc/npc';\nimport { Draggable } from '../generic/';\nimport Button from 'react-bootstrap/Button';\nimport './npc-manager.css';\nimport Form from 'react-bootstrap/Form';\nimport shortid from 'shortid';\n\nfunction NpcManager(props) {\n  const [components, setComponents] = useState([]);\n  const [npcs, setNpcs] = useState([]);\n  const [rollType, setRollType] = useState('');\n  const [toDelete, setToDelete] = useState({});\n\n  const addNpc = () => {\n    const [npc, component] = getNewNpc();\n    setComponents([...components, component]);\n    setNpcs([...npcs, npc]);\n  };\n\n  const getNewNpc = (npcProps = {}, dragProps = {\n    x: 500,\n    y: 100\n  }, key = components.length) => {\n    const npcRef = React.createRef();\n    const npc = React.createElement(Npc, {\n      ref: npcRef,\n      ...npcProps\n    });\n    const dragRef = React.createRef();\n    const deleteButton = React.createElement(Button, {\n      variant: 'outline-danger',\n      className: 'delete-button',\n      onClick: () => {\n        setToDelete({\n          dragRef,\n          npcRef\n        });\n      }\n    }, 'X');\n    const component = React.createElement(Draggable, {\n      ref: dragRef,\n      key: shortid.generate(),\n      defaultX: dragProps.x,\n      defaultY: dragProps.y\n    }, npc, deleteButton);\n    return [npc, component];\n  };\n\n  const rollAll = () => {\n    for (const npc of npcs) {\n      const npcRef = npc.ref;\n      npcRef.current.rollType(rollType);\n    }\n  };\n\n  const updateRollType = ev => {\n    const newRollType = ev.target.value;\n    setRollType(newRollType);\n  };\n\n  const deleteNpc = () => {\n    const newDraggables = components.filter(draggable => draggable.ref !== toDelete.dragRef);\n    const newNpcs = npcs.filter(npc => npc.ref !== toDelete.npcRef);\n    setComponents(newDraggables);\n    setNpcs(newNpcs);\n  };\n\n  const getStates = () => {\n    const states = [];\n\n    for (const [index, draggable] of components.entries()) {\n      const dragState = draggable.ref.current.save();\n      const npc = npcs[index];\n      const npcState = npc.ref.current.save();\n      states.push({\n        dragState,\n        npcState\n      });\n    }\n\n    return states;\n  }; //hacked on save functionality, Not really a fan of how I'm doing this but I dont wanna spend forever on it\n\n\n  const save = () => {\n    const states = getStates();\n    const fileData = JSON.stringify(states);\n    const blob = new Blob([fileData], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = 'npcs.json';\n    link.href = url;\n    link.click();\n  };\n\n  useEffect(deleteNpc, [toDelete]);\n\n  const load = ev => {\n    const files = ev.target.files;\n\n    for (const file of files) {\n      file.text().then(contents => {\n        const json = JSON.parse(contents);\n        const newNpcs = [];\n        const newDraggables = [];\n        let key = components.length;\n\n        if (Array.isArray(json)) {\n          for (const comp of json) {\n            const [npc, draggable] = getNewNpc(comp.npcState, comp.dragState, key);\n            newNpcs.push(npc);\n            newDraggables.push(draggable);\n            key++;\n          }\n        }\n\n        setComponents([...components, ...newDraggables]);\n        setNpcs([...npcs, ...newNpcs]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"npc-manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: updateRollType,\n    className: \"npc-rolltype-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Strength\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Strength\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Dexterity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Dexterity\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Constitution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Constitution\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Intelligence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Intelligence\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Wisdom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Wisdom\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Charisma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Charisma\")), components, /*#__PURE__*/React.createElement(Button, {\n    onClick: rollAll,\n    variant: \"outline-light\",\n    className: \"roll-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }\n  }, \"Roll All\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: addNpc,\n    variant: \"outline-light\",\n    className: \"new-npc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }\n  }, \"New NPC\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: save,\n    variant: \"outline-success\",\n    className: \"save-npcs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Form.File, {\n    label: \"Load\",\n    onChange: load,\n    accept: \".json\",\n    className: \"load-npcs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default NpcManager;","map":{"version":3,"sources":["/home/anthony/repos/npc-manager/src/components/npc-manager/npc-manager.js"],"names":["React","useState","useEffect","Npc","Draggable","Button","Form","shortid","NpcManager","props","components","setComponents","npcs","setNpcs","rollType","setRollType","toDelete","setToDelete","addNpc","npc","component","getNewNpc","npcProps","dragProps","x","y","key","length","npcRef","createRef","createElement","ref","dragRef","deleteButton","variant","className","onClick","generate","defaultX","defaultY","rollAll","current","updateRollType","ev","newRollType","target","value","deleteNpc","newDraggables","filter","draggable","newNpcs","getStates","states","index","entries","dragState","save","npcState","push","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","download","href","click","load","files","file","text","then","contents","json","parse","Array","isArray","comp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMiB,MAAM,GAAG,MAAM;AACpB,UAAM,CAACC,GAAD,EAAMC,SAAN,IAAmBC,SAAS,EAAlC;AACAV,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBU,SAAhB,CAAD,CAAb;AACAP,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUO,GAAV,CAAD,CAAP;AACA,GAJD;;AAOA,QAAME,SAAS,GAAG,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,SAAS,GAAG;AAACC,IAAAA,CAAC,EAAC,GAAH;AAAQC,IAAAA,CAAC,EAAC;AAAV,GAA5B,EAA4CC,GAAG,GAAGhB,UAAU,CAACiB,MAA7D,KAAwE;AACzF,UAAMC,MAAM,GAAG5B,KAAK,CAAC6B,SAAN,EAAf;AACA,UAAMV,GAAG,GAAGnB,KAAK,CAAC8B,aAAN,CAAoB3B,GAApB,EAAyB;AAAC4B,MAAAA,GAAG,EAAEH,MAAN;AAAc,SAAGN;AAAjB,KAAzB,CAAZ;AACA,UAAMU,OAAO,GAAGhC,KAAK,CAAC6B,SAAN,EAAhB;AACA,UAAMI,YAAY,GAAGjC,KAAK,CAAC8B,aAAN,CAAoBzB,MAApB,EAA4B;AAAC6B,MAAAA,OAAO,EAAC,gBAAT;AAA2BC,MAAAA,SAAS,EAAE,eAAtC;AAAuDC,MAAAA,OAAO,EAAE,MAAM;AAACnB,QAAAA,WAAW,CAAC;AAACe,UAAAA,OAAD;AAAUJ,UAAAA;AAAV,SAAD,CAAX;AAAgC;AAAvG,KAA5B,EAAsI,GAAtI,CAArB;AACA,UAAMR,SAAS,GAAGpB,KAAK,CAAC8B,aAAN,CACjB1B,SADiB,EAEjB;AACC2B,MAAAA,GAAG,EAAEC,OADN;AAECN,MAAAA,GAAG,EAAEnB,OAAO,CAAC8B,QAAR,EAFN;AAGCC,MAAAA,QAAQ,EAAEf,SAAS,CAACC,CAHrB;AAICe,MAAAA,QAAQ,EAAEhB,SAAS,CAACE;AAJrB,KAFiB,EAQjBN,GARiB,EASjBc,YATiB,CAAlB;AAWA,WAAO,CAACd,GAAD,EAAMC,SAAN,CAAP;AACA,GAjBD;;AAmBA,QAAMoB,OAAO,GAAG,MAAM;AACrB,SAAI,MAAMrB,GAAV,IAAiBP,IAAjB,EAAuB;AACtB,YAAMgB,MAAM,GAAGT,GAAG,CAACY,GAAnB;AACAH,MAAAA,MAAM,CAACa,OAAP,CAAe3B,QAAf,CAAwBA,QAAxB;AACA;AACD,GALD;;AAOA,QAAM4B,cAAc,GAAIC,EAAD,IAAQ;AAC9B,UAAMC,WAAW,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAA9B;AACA/B,IAAAA,WAAW,CAAC6B,WAAD,CAAX;AACA,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAM;AAEvB,UAAMC,aAAa,GAAGtC,UAAU,CAACuC,MAAX,CAAmBC,SAAD,IAAeA,SAAS,CAACnB,GAAV,KAAkBf,QAAQ,CAACgB,OAA5D,CAAtB;AACA,UAAMmB,OAAO,GAAGvC,IAAI,CAACqC,MAAL,CAAa9B,GAAD,IAASA,GAAG,CAACY,GAAJ,KAAYf,QAAQ,CAACY,MAA1C,CAAhB;AAEAjB,IAAAA,aAAa,CAACqC,aAAD,CAAb;AACAnC,IAAAA,OAAO,CAACsC,OAAD,CAAP;AACA,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAI,MAAM,CAACC,KAAD,EAAQJ,SAAR,CAAV,IAAgCxC,UAAU,CAAC6C,OAAX,EAAhC,EAAsD;AACrD,YAAMC,SAAS,GAAGN,SAAS,CAACnB,GAAV,CAAcU,OAAd,CAAsBgB,IAAtB,EAAlB;AACA,YAAMtC,GAAG,GAAGP,IAAI,CAAC0C,KAAD,CAAhB;AACA,YAAMI,QAAQ,GAAGvC,GAAG,CAACY,GAAJ,CAAQU,OAAR,CAAgBgB,IAAhB,EAAjB;AACAJ,MAAAA,MAAM,CAACM,IAAP,CAAY;AACXH,QAAAA,SADW;AAEXE,QAAAA;AAFW,OAAZ;AAIA;;AACD,WAAOL,MAAP;AACA,GAZD,CArD0B,CAmE1B;;;AACA,QAAMI,IAAI,GAAG,MAAM;AAClB,UAAMJ,MAAM,GAAGD,SAAS,EAAxB;AACA,UAAMQ,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAjB;AACA,UAAMU,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,QAAD,CAAT,EAAqB;AAACK,MAAAA,IAAI,EAAE;AAAP,KAArB,CAAb;AACA,UAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AACA,UAAMM,IAAI,GAAGC,QAAQ,CAACxC,aAAT,CAAuB,GAAvB,CAAb;AACAuC,IAAAA,IAAI,CAACE,QAAL,GAAgB,WAAhB;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYN,GAAZ;AACAG,IAAAA,IAAI,CAACI,KAAL;AACA,GATD;;AAWAvE,EAAAA,SAAS,CAAC6C,SAAD,EAAY,CAAC/B,QAAD,CAAZ,CAAT;;AAGA,QAAM0D,IAAI,GAAI/B,EAAD,IAAQ;AACpB,UAAMgC,KAAK,GAAGhC,EAAE,CAACE,MAAH,CAAU8B,KAAxB;;AACA,SAAI,MAAMC,IAAV,IAAkBD,KAAlB,EAAyB;AACxBC,MAAAA,IAAI,CAACC,IAAL,GAAYC,IAAZ,CAAkBC,QAAD,IAAc;AAC9B,cAAMC,IAAI,GAAGnB,IAAI,CAACoB,KAAL,CAAWF,QAAX,CAAb;AACA,cAAM5B,OAAO,GAAG,EAAhB;AACA,cAAMH,aAAa,GAAG,EAAtB;AACA,YAAItB,GAAG,GAAGhB,UAAU,CAACiB,MAArB;;AACA,YAAGuD,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAH,EAAwB;AACvB,eAAI,MAAMI,IAAV,IAAkBJ,IAAlB,EAAwB;AACvB,kBAAM,CAAC7D,GAAD,EAAM+B,SAAN,IAAmB7B,SAAS,CAAC+D,IAAI,CAAC1B,QAAN,EAAgB0B,IAAI,CAAC5B,SAArB,EAAgC9B,GAAhC,CAAlC;AACAyB,YAAAA,OAAO,CAACQ,IAAR,CAAaxC,GAAb;AACA6B,YAAAA,aAAa,CAACW,IAAd,CAAmBT,SAAnB;AACAxB,YAAAA,GAAG;AACH;AACD;;AACDf,QAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB,GAAGsC,aAAnB,CAAD,CAAb;AACAnC,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGuC,OAAb,CAAD,CAAP;AACA,OAfD;AAgBA;AACD,GApBD;;AAsBA,sBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAET,cAApC;AAAoD,IAAA,SAAS,EAAC,qBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIa;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJb,eAOa;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPb,eAUa;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVb,eAaa;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbb,eAgBa;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBb,eAmBa;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBb,CADD,EAwBEhC,UAxBF,eAyBC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE8B,OAAjB;AAA0B,IAAA,OAAO,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBD,eA0BC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEtB,MAAjB;AAAyB,IAAA,OAAO,EAAC,eAAjC;AAAiD,IAAA,SAAS,EAAC,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1BD,eA2BC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEuC,IAAjB;AAAuB,IAAA,OAAO,EAAC,iBAA/B;AAAiD,IAAA,SAAS,EAAC,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BD,eA4BC,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,QAAQ,EAAEiB,IAAlC;AAAwC,IAAA,MAAM,EAAC,OAA/C;AAAuD,IAAA,SAAS,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BD,CADD;AAgCA;;AAED,eAAelE,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Npc from './npc/npc';\nimport { Draggable } from '../generic/';\nimport Button from 'react-bootstrap/Button';\nimport './npc-manager.css';\nimport Form from 'react-bootstrap/Form';\nimport shortid from 'shortid';\nfunction NpcManager(props) {\n\tconst [components, setComponents] = useState([]);\n\tconst [npcs, setNpcs] = useState([]);\n\tconst [rollType, setRollType] = useState('');\n\tconst [toDelete, setToDelete] = useState({});\n\n\tconst addNpc = () => {\n\t\tconst [npc, component] = getNewNpc();\n\t\tsetComponents([...components, component]);\n\t\tsetNpcs([...npcs, npc]);\n\t};\n\n\n\tconst getNewNpc = (npcProps = {}, dragProps = {x:500, y:100}, key = components.length) => {\n\t\tconst npcRef = React.createRef();\n\t\tconst npc = React.createElement(Npc, {ref: npcRef, ...npcProps});\n\t\tconst dragRef = React.createRef();\n\t\tconst deleteButton = React.createElement(Button, {variant:'outline-danger', className: 'delete-button', onClick: () => {setToDelete({dragRef, npcRef});}}, 'X');\n\t\tconst component = React.createElement(\n\t\t\tDraggable,\n\t\t\t{\n\t\t\t\tref: dragRef,\n\t\t\t\tkey: shortid.generate(),\n\t\t\t\tdefaultX: dragProps.x,\n\t\t\t\tdefaultY: dragProps.y,\n\t\t\t},\n\t\t\tnpc,\n\t\t\tdeleteButton,\n\t\t);\n\t\treturn [npc, component];\n\t};\n\n\tconst rollAll = () => {\n\t\tfor(const npc of npcs) {\n\t\t\tconst npcRef = npc.ref;\n\t\t\tnpcRef.current.rollType(rollType);\n\t\t}\n\t};\n\n\tconst updateRollType = (ev) => {\n\t\tconst newRollType = ev.target.value;\n\t\tsetRollType(newRollType);\n\t};\n\n\tconst deleteNpc = () => {\n\n\t\tconst newDraggables = components.filter((draggable) => draggable.ref !== toDelete.dragRef);\n\t\tconst newNpcs = npcs.filter((npc) => npc.ref !== toDelete.npcRef);\n\n\t\tsetComponents(newDraggables);\n\t\tsetNpcs(newNpcs);\n\t};\n\n\tconst getStates = () => {\n\t\tconst states = [];\n\t\tfor(const [index, draggable] of components.entries()) {\n\t\t\tconst dragState = draggable.ref.current.save();\n\t\t\tconst npc = npcs[index];\n\t\t\tconst npcState = npc.ref.current.save();\n\t\t\tstates.push({\n\t\t\t\tdragState,\n\t\t\t\tnpcState\n\t\t\t});\n\t\t}\n\t\treturn states;\n\t};\n\n\t//hacked on save functionality, Not really a fan of how I'm doing this but I dont wanna spend forever on it\n\tconst save = () => {\n\t\tconst states = getStates();\n\t\tconst fileData = JSON.stringify(states);\n\t\tconst blob = new Blob([fileData], {type: 'text/plain'});\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst link = document.createElement('a');\n\t\tlink.download = 'npcs.json';\n\t\tlink.href = url;\n\t\tlink.click();\n\t};\n\n\tuseEffect(deleteNpc, [toDelete]);\n\n\n\tconst load = (ev) => {\n\t\tconst files = ev.target.files;\n\t\tfor(const file of files) {\n\t\t\tfile.text().then((contents) => {\n\t\t\t\tconst json = JSON.parse(contents);\n\t\t\t\tconst newNpcs = [];\n\t\t\t\tconst newDraggables = [];\n\t\t\t\tlet key = components.length;\n\t\t\t\tif(Array.isArray(json)) {\n\t\t\t\t\tfor(const comp of json) {\n\t\t\t\t\t\tconst [npc, draggable] = getNewNpc(comp.npcState, comp.dragState, key);\n\t\t\t\t\t\tnewNpcs.push(npc);\n\t\t\t\t\t\tnewDraggables.push(draggable);\n\t\t\t\t\t\tkey++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetComponents([...components, ...newDraggables]);\n\t\t\t\tsetNpcs([...npcs, ...newNpcs]);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"npc-manager\">\n\t\t\t<Form.Control as=\"select\" onChange={updateRollType} className='npc-rolltype-select'>\n\t\t\t\t<option value=\"\">\n\t\t\t\t\tNone\n\t\t\t\t</option>\n                <option value=\"Strength\">\n\t\t\t\t\tStrength\n\t\t\t\t</option>\n                <option value=\"Dexterity\">\n\t\t\t\t\tDexterity\n\t\t\t\t</option>\n                <option value=\"Constitution\">\n\t\t\t\t\tConstitution\n\t\t\t\t</option>\n                <option value=\"Intelligence\">\n\t\t\t\t\tIntelligence\n\t\t\t\t</option>\n                <option value=\"Wisdom\">\n\t\t\t\t\tWisdom\n\t\t\t\t</option>\n                <option value=\"Charisma\">\n\t\t\t\t\tCharisma\n\t\t\t\t</option>\n\t\t\t</Form.Control>\n\t\t\t{components}\n\t\t\t<Button onClick={rollAll} variant=\"outline-light\" className='roll-all'>Roll All</Button>\n\t\t\t<Button onClick={addNpc} variant=\"outline-light\" className='new-npc'>New NPC</Button>\n\t\t\t<Button onClick={save} variant=\"outline-success\" className='save-npcs'>Save</Button>\n\t\t\t<Form.File label=\"Load\" onChange={load} accept=\".json\" className='load-npcs'/>\n\t\t</div>\n\t);\n}\n\nexport default NpcManager;\n\n\n"]},"metadata":{},"sourceType":"module"}