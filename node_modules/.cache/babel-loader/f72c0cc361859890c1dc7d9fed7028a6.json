{"ast":null,"code":"var _jsxFileName = \"/home/anthony/repos/npc-manager/src/components/generic/draggable/draggable.js\";\nimport React, { useState, useImperativeHandle, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './draggable.css';\nconst Draggable = React.forwardRef(function Draggable(props, ref) {\n  const [classes, setclasses] = useState(['draggable']);\n  const dragRef = useRef();\n\n  const disableHighlight = () => {\n    setclasses(['draggable']);\n  };\n  /**\n   * Starts dragging the component. Remembering where the user initially clicked on it\n   * @param {Event} ev\n   */\n\n\n  const startDrag = ev => {\n    highlightElement();\n    const element = ref.current.getElement();\n    const rect = element.getBoundingClientRect();\n    const offSetX = ev.pageX - rect.left - window.scrollX;\n    const offSetY = ev.pageY - rect.top - window.scrollY;\n    /**\n     * Moves an element to the mouse position\n     * defined inside startdrag so that it has a reference to the element\n     * @param {Event} ev\n     */\n\n    const moveElement = ev => {\n      if (!ev.altKey) {\n        const posY = ev.pageY - offSetY;\n        const posX = ev.pageX - offSetX;\n        element.style.top = posY + 'px';\n        element.style.left = posX + 'px';\n      }\n    }; //doesnt work yet\n\n\n    const touchMoveElement = ev => {\n      ev.preventDefault();\n      const touch = ev.changedTouches[0];\n      const posY = touch.pageY - offSetY;\n      const posX = touch.pageX - offSetX;\n      element.style.top = posY + 'px';\n      element.style.left = posX + 'px';\n    };\n    /**\n     * Stops the element from dragging and removes the document event listeners\n     */\n\n\n    const stopDrag = ev => {\n      disableHighlight();\n      document.removeEventListener('mousemove', moveElement);\n      document.removeEventListener('mouseup', stopDrag);\n      document.removeEventListener('touchend', stopDrag);\n      document.removeEventListener('touchcancel', stopDrag);\n      document.removeEventListener('touchmove', touchMoveElement);\n    };\n\n    document.addEventListener('mousemove', moveElement);\n    document.addEventListener('touchmove', touchMoveElement);\n    document.addEventListener('mouseup', stopDrag);\n    document.addEventListener('touchend', stopDrag);\n    document.addEventListener('touchcancel', stopDrag);\n  };\n\n  const highlightElement = () => {\n    setclasses([...classes, 'border-enabled']);\n  };\n\n  const save = () => {\n    const element = ref.current.getElement();\n    const rect = element.getBoundingClientRect();\n    const draggable = {\n      x: rect.left,\n      y: rect.top\n    };\n    return draggable;\n  };\n\n  useImperativeHandle(ref, () => ({\n    save,\n    getElement: () => {\n      return dragRef.current;\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.join(' '),\n    onMouseDown: startDrag,\n    onTouchStart: startDrag,\n    ref: dragRef,\n    style: {\n      left: props.defaultX || 0,\n      top: props.defaultY || 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, props.children);\n});\nexport default Draggable;\nDraggable.propTypes = {\n  children: PropTypes.node,\n  defaultX: PropTypes.number,\n  defaultY: PropTypes.number\n};","map":{"version":3,"sources":["/home/anthony/repos/npc-manager/src/components/generic/draggable/draggable.js"],"names":["React","useState","useImperativeHandle","useRef","PropTypes","Draggable","forwardRef","props","ref","classes","setclasses","dragRef","disableHighlight","startDrag","ev","highlightElement","element","current","getElement","rect","getBoundingClientRect","offSetX","pageX","left","window","scrollX","offSetY","pageY","top","scrollY","moveElement","altKey","posY","posX","style","touchMoveElement","preventDefault","touch","changedTouches","stopDrag","document","removeEventListener","addEventListener","save","draggable","x","y","join","defaultX","defaultY","children","propTypes","node","number"],"mappings":"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","sourcesContent":["import React, { useState, useImperativeHandle, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './draggable.css';\n\nconst Draggable = React.forwardRef(function Draggable(props, ref) {\n\tconst [classes, setclasses] = useState(['draggable']);\n\tconst dragRef = useRef();\n\tconst disableHighlight = () => {\n\t\tsetclasses(['draggable']);\n\t};\n\n\t/**\n\t * Starts dragging the component. Remembering where the user initially clicked on it\n\t * @param {Event} ev\n\t */\n\tconst startDrag = (ev) => {\n\t\thighlightElement();\n\t\tconst element = ref.current.getElement();\n\t\tconst rect = element.getBoundingClientRect();\n        const offSetX = ev.pageX - rect.left - window.scrollX;\n        const offSetY = ev.pageY - rect.top - window.scrollY;\n\n\t\t/**\n\t\t * Moves an element to the mouse position\n\t\t * defined inside startdrag so that it has a reference to the element\n\t\t * @param {Event} ev\n\t\t */\n\t\tconst moveElement = (ev) => {\n\t\t\tif(!ev.altKey) {\n\t\t\t\tconst posY = ev.pageY - offSetY;\n            \tconst posX = ev.pageX - offSetX;\n\t\t\t\telement.style.top = posY + 'px';\n\t\t\t\telement.style.left = posX + 'px';\n\t\t\t}\n\t\t};\n\n\t\t//doesnt work yet\n\t\tconst touchMoveElement = (ev) => {\n\t\t\tev.preventDefault();\n\t\t\tconst touch = ev.changedTouches[0];\n\t\t\tconst posY = touch.pageY - offSetY;\n            const posX = touch.pageX - offSetX;\n\t\t\telement.style.top = posY + 'px';\n\t\t\telement.style.left = posX + 'px';\n\t\t};\n\n\t\t/**\n\t\t * Stops the element from dragging and removes the document event listeners\n\t\t */\n\t\tconst stopDrag = (ev) => {\n\t\t\tdisableHighlight();\n\t\t\tdocument.removeEventListener('mousemove', moveElement);\n\t\t\tdocument.removeEventListener('mouseup', stopDrag);\n\t\t\tdocument.removeEventListener('touchend', stopDrag);\n\t\t\tdocument.removeEventListener('touchcancel', stopDrag);\n\t\t\tdocument.removeEventListener('touchmove', touchMoveElement);\n\t\t};\n\n\t\tdocument.addEventListener('mousemove', moveElement);\n\t\tdocument.addEventListener('touchmove', touchMoveElement);\n\t\tdocument.addEventListener('mouseup', stopDrag);\n\t\tdocument.addEventListener('touchend', stopDrag);\n\t\tdocument.addEventListener('touchcancel', stopDrag);\n\t};\n\n\tconst highlightElement = () => {\n\t\tsetclasses([...classes, 'border-enabled']);\n\t};\n\n\tconst save = () => {\n\t\tconst element = ref.current.getElement();\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst draggable = {\n\t\t\tx: rect.left,\n\t\t\ty: rect.top,\n\t\t};\n\t\treturn draggable;\n\t};\n\n\tuseImperativeHandle(ref, () => ({\n\t\tsave,\n\t\tgetElement: () => {\n\t\t\treturn dragRef.current;\n\t\t}\n\t}));\n\n\treturn (\n\t\t<div className={classes.join(' ')} onMouseDown={startDrag} onTouchStart={startDrag} ref={dragRef} style={{left: props.defaultX || 0, top: props.defaultY || 0}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n});\nexport default Draggable;\n\nDraggable.propTypes = {\n\tchildren: PropTypes.node,\n\tdefaultX: PropTypes.number,\n\tdefaultY: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}